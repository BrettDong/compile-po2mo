name: "Release"

on:
  workflow_dispatch:

jobs:
  release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get tag name
        run: |
          git clone https://github.com/BrettDong/compile-po2mo.git
          cd compile-po2mo
          echo "TAG_NAME=$(git describe --abbrev=0)" >> $GITHUB_ENV
          cd ..
          rm -rf compile-po2mo
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: ${{ env.TAG_NAME }}
  build:
    needs: release
    strategy:
      matrix:
        include:
          - name: Ubuntu Linux 20.04 LTS
            os: ubuntu-20.04
            artifact: ./target/release/compile-po2mo
          
          - name: Windows Server 2022
            os: windows-2022
            artifact: ./target/release/compile-po2mo.exe
          
          - name: macOS 10.15
            os: macos-10.15
            artifact: ./target/release/compile-po2mo

    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release
      - name: Checksum (UNIX)
        if: runner.os != 'Windows'
        run: shasum -a 256 ${{ matrix.artifact }}
      - name: Checksum (Windows)
        if: runner.os == 'Windows'
        run: Get-FileHash ${{ matrix.artifact }} -Algorithm SHA256 | Format-List
      - name: Upload release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          asset_content_type: 'application/octet-stream'
          asset_name: ${{ matrix.name }}
          asset_path: ${{ matrix.artifact }}         
          upload_url: ${{ needs.release.outputs.upload_url }}
